os:
#  - linux
#  - osx
  - windows
dist: bionic
#dist: focal
osx_image: xcode11.4
      
language: shell
before_install:
#  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install curl-openssl --force; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export PATH="/usr/local/opt/curl/bin:$PATH"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then python3 -m pip install --upgrade pip; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  choco install python --version=3.7.9 innosetup postgresql; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  python -m pip install --upgrade pip ; fi
#  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  choco install visualstudio2019buildtools ; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  choco install curl --force; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -y python3-pip alien rsync; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then python3 -m pip install --upgrade pip setuptools; fi
env: 
  - PATH=/c/Python37:/c/Python37/Scripts:/c/ProgramData/chocolatey/lib/curl/tools:/c/ProgramData/chocolatey/lib/SQLite/tools:$PATH PACKAGE=clientfva VERSION=1.0 ARCH=amd64  RPM_ARCH=x86_64
install:
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  pip install setuptools-scm==6.0.1; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  pip install -r requirements.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  pip install pyinstaller; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then python3 -m pip install -r requirements.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then python3 -m pip install pyinstaller; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then python3 -m pip install --user -r requirements.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then python3 -m pip install --user pyinstaller; fi

script:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then ./builder/ci/mac.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then ./builder/ci/windows.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  ./builder/ci/linux.sh; fi

#  - tar -zcf "dfva_client_${TRAVIS_OS_NAME}_${TRAVIS_BUILD_NUMBER}.tar.gz" dist/
after_success:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then curl --ftp-create-dirs -k -T "client_fva_${TRAVIS_OS_NAME}_${TRAVIS_BUILD_NUMBER}.pkg"  sftp://${visualcon_user}:${visualcon_password}@visualcon.net/home/githubdeploy/; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null   ${visualcon_user}@visualcon.net mkdir -p /home/githubdeploy/${TRAVIS_BUILD_NUMBER}/ ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  scp -i /tmp/ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "release/${PACKAGE}_${VERSION}_${ARCH}.deb"  ${visualcon_user}@visualcon.net:/home/githubdeploy/${TRAVIS_BUILD_NUMBER}/; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  scp -i /tmp/ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "release/${PACKAGE}-${VERSION}-2.${RPM_ARCH}.rpm" ${visualcon_user}@visualcon.net:/home/githubdeploy/${TRAVIS_BUILD_NUMBER}/; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  scp -i /tmp/ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "release/lsb-${PACKAGE}-${VERSION}-2.${RPM_ARCH}.rpm"  ${visualcon_user}@66.113.177.161:/home/githubdeploy/${TRAVIS_BUILD_NUMBER}/; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  scp -i /tmp/ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "release/${PACKAGE}-${VERSION}.tgz"  ${visualcon_user}@visualcon.net:/home/githubdeploy/${TRAVIS_BUILD_NUMBER}/; fi

  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then winscp.com.exe /command "open sftp://${visualcon_user}:${visualcon_password}@visualcon.net/" "put $OLD_PATH/release/client_fva_${TRAVIS_OS_NAME}_${TRAVIS_BUILD_NUMBER}.exe /home/githubdeploy/" "exit"; fi



#  - ls -R dist
#before_deploy:
#  - ls -R dist
deploy:
  provider: releases
  api_key: $RELEASE_TOKEN
  file_glob: true
  file:
      - release/*
  skip_cleanup: true
  draft: true
  on:
    tags: true

